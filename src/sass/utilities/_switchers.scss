@use '../abstracts/breakpoints';

////////// Variables ////////////

// switching app height
$app-height: (
  'regular': 100%,
  //100vh
  'tab': 100%,
  //100%
);

:root {
  @each $size, $value in $app-height {
    @if $size == 'regular' {
      --app-height: #{$value};
    } @else {
      @include breakpoints.respond(tab-port) {
        --app-height: #{$value};
      }
    }
  }
}

////////// Classes ////////////

//transitions
.app-transition-in {
  animation: app-transition-in 1s forwards ease-out;
}

.hero-transition-out {
  animation: hero-transition-out 0.5s forwards ease-out;
}

.page-transition-in {
  animation: page-transition-in 1s forwards ease-out;
}

.page-transition-out {
  animation: page-transition-out 0.5s forwards ease-out;
}

// fixing the error of Transition
.page-transition-in-margin {
  margin-top: -10rem;
}

.pageDash-minHeight {
  min-height: 150rem;
}

//errors
.error {
  color: var(--clr-accent-300);
}

.error-user {
  color: var(--clr-accent-300);
  position: absolute;
  top: 10%;
}

.remove-error {
  animation: remove-error 5s forwards ease-out;
}

.display-error {
  animation: display-popup 3s ease-out;
}

//popup
.display-popup {
  animation: display-popup 5s ease-out;
}

//modal
.hidden {
  visibility: hidden;
  opacity: 0;
}

// bookmark heart position
.bookmark-position {
  position: relative;
  right: 2.5rem;
}
